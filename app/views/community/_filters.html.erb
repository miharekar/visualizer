<div class="px-4 sm:px-0">
  <%= form_with(url: { action: :index }, method: :get) do |f| %>
    <div class="grid grid-cols-12 gap-3">
      <% CommunityController::FILTERS.each do |filter, options| %>
        <% if options[:autocomplete] %>
          <div class="col-span-6 md:col-span-3" data-autocomplete-url-value="<%= autocomplete_community_index_path(filter: filter) %>" data-autocomplete-selected-class="bg-terracotta-300/25" data-controller="autocomplete">
            <%= f.label filter, I18n.t("helpers.label.shot.#{filter}", default: filter.to_s.humanize), class: "standard-label" %>
            <% if options[:target] %>
              <%= f.hidden_field options[:target], value: params[options[:target]], data: { autocomplete_target: "hidden" } %>
            <% end %>
            <%= f.search_field filter, value: params[filter], class: "mt-1 standard-input", data: { autocomplete_target: "input" } %>
            <ul class="absolute z-10 mt-2 overflow-y-auto bg-white shadow-lg rounded-md list-group ring-1 ring-black/5 max-h-96" data-autocomplete-target="results"></ul>
          </div>
        <% else %>
          <div class="col-span-6 md:col-span-3">
            <%= f.label filter, class: "standard-label" %>
            <%= f.search_field filter, value: params[filter], class: "mt-1 standard-input" %>
          </div>
        <% end %>
      <% end %>
      <div class="col-span-6 md:col-span-5">
        <%= f.label :min_enjoyment, class: "standard-label" %>
        <div class="flex items-center mt-1" data-controller="range">
          <% min = params[:min_enjoyment].presence || 0 %>
          <div class="rounded-full size-8" style="background-color: <%= enjoyment_hex(min) %>;" data-range-target="color">
            <div class="py-1 text-center text-white" data-range-target="text">
              <%= min %>
            </div>
          </div>
          <%= f.range_field :min_enjoyment, in: 0..100, value: min, allow_blank: true, class: "shot-range ml-2 grow dark:bg-neutral-800", data: { action: "input->range#update" } %>
        </div>
      </div>
      <div class="col-span-6 md:col-span-5">
        <%= f.label :max_enjoyment, class: "standard-label" %>
        <div class="flex items-center mt-1" data-controller="range">
          <% max = params[:max_enjoyment].presence || 100 %>
          <div class="rounded-full size-8" style="background-color: <%= enjoyment_hex(max) %>;" data-range-target="color">
            <div class="py-1 text-center text-white" data-range-target="text">
              <%= max %>
            </div>
          </div>
          <%= f.range_field :max_enjoyment, in: 0..100, value: max, class: "shot-range ml-2 grow dark:bg-neutral-800", data: { action: "input->range#update" } %>
        </div>
      </div>
      <div class="col-span-12 md:col-span-2">
        <label class="block">&nbsp;</label>
        <%= f.submit "Search", class: "w-full button-terracotta py-2 px-4" %>
      </div>
    </div>
  <% end %>
</div>
